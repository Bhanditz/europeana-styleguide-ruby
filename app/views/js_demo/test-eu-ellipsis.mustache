<style>

  .container{
    margin:   3em auto;
    position: relative;
    width:    40%;
  }

  .config{
    background-color: #999;
    color:            #fff;
    font-size:        0.875em;
    margin-top:       1em;
    padding:          0.5em;
  }

  .show-when-large{
    display: none;
  }
  .show-when-small{
    display: inline-block;
  }

  .test{
    background-color: #e1e1e1;
    overflow:         hidden;
    padding:          0.5em;
    line-height:      1.8em;
    max-height:       4.6em;
  }

  @media all and (min-width: 45em) {

    .test{
      background-color: #b1b1b1;
    }

    .show-when-large{
      display: inline-block;
    }

    .show-when-small{
      display: none;
    }

  }


</style>

<h3>Ellipsis Examples</h3>

<p>Adjust the width of your browser to see them in action.</p>


<h4>Simple Example</h4>

<p>The content of the height-constrained div is simple text</p>

<div class="container">
  <div class="test test-1">
    This text is too long to fit in its container and so should display with ellipsis, indicating to the user that there is more to be seen.
  </div>
  <div class="config">
    <code>
      Ellipsis.create($('.test-1'), {});
    </code>
  </div>
</div>


<h4>Markup Example</h4>

<p>The content of the height-constrained div contains markup.</p>

<div class="container">
  <div class="test test-2">
    <a href="javascript:alert('follow link...');">This text is too long to fit in its container and so should display with ellipsis, indicating to the user that there is more to be seen.</a>
  </div>
  <div class="config">
    <code>
      Ellipsis.create($('.test-2'), {textSelectors:['a']});
    </code>
  </div>
</div>


<h4>Breakpoint Example</h4>

<p>The content of the height-constrained div contains markup that is hidden or shown according to the viewport width</p>

<div class="container">
  <div class="test test-3">
    <a href="javascript:alert('follow link...');">
      <span class="show-when-small">On small viewports this text is visible: it's too long to fit in its container and so should display with ellipsis (when it displays at all)</span>
      <span class="show-when-large">On large viewports this text is visible: it's too long to fit in its container and so should display with ellipsis (when it displays at all)</span>
    </a>
  </div>
  <div class="config">
    <code>
      Ellipsis.create($('.test-3'), {textSelectors:['a .show-when-small', 'a .show-when-large']});
    </code>
  </div>
</div>


<h4>Mixed Content Pitfall</h4>

<p>The eu-ellipsis utility updates a single text-node and will not process elements that include more than one text-node as children.</p>

<p>This can result in strange errors:</p>

<div class="container">
  <p>A bad example:</p>
  <div class="test test-6">The link at the end of this text will always come after any ellipsis, which is weird! <a href="javascript:alert('follow link...');">Link</a></div>
  <div class="config">
    <code>
      Ellipsis.create($('.test-6'));
    </code>
  </div>
</div>

<p>But knowing this behaviour can be useful:</p>

<div class="container">

  <div class="test test-4">This text should be followed by an icon - even when the ellipsis show.<span class="svg-icon-external-eu-blue"></span></div>
  <div class="config">
    <code>
      Ellipsis.create($('.test-4'));
    </code>
  </div>
  <br/>
  <p>The same but in a link:</p>

  <div class="test test-5"><a href="javascript:alert('follow link...');">This text should be followed by an icon - even when the ellipsis show.<span class="svg-icon-external-eu-blue"></span></a></div>
  <div class="config">
    <code>
      Ellipsis.create($('.test-5'), {textSelectors:['a']});
    </code>
  </div>

</div>


<h4>Mixed Content Workaround</h4>

<p>The eu-ellipsis can be applied to mixed or differing (sibling) elements when they are assigned a common selector and the "multiNode" option is set to true.  Note that the multiNode option can only be used with a single text-selector.</p>

<div class="container">
  <div class="test test-7"><span class="several">This </span><a class="several" href="javascript:alert('follow link...');">link</a><span class="several"> should not break the ellipsis, as it uses the same </span><b class="several">common class</b><span class="several"> as the text.</span><span class="svg-icon-external-eu-blue"></span></div>
  <div class="config">
    <code>
      Ellipsis.create($('.test-7'), {multiNode:true, textSelectors:['.several']});
    </code>
  </div>
</div>


<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
